@using Beseler.Shared.Budgeting

<div class="card m-1">
    <div class="card-header @_headerClass">
        <h4 class="card-title">@Name</h4>
    </div>
    <div class="card-body border border-2 @_borderClass">
        <div class="row">
            <div class="col-2">
                <h5>Day</h5>
            </div>
            <div class="col-7">
                <h5>Description</h5>
            </div>
            <div class="col-3">
                <h5>Amount</h5>
            </div>
        </div>
        @if (IsLoaded)
        {
            @foreach (var transaction in Transactions.OrderBy(x => x.TransactionDate))
            {
                <div class="row">
                    <div class="col-2 text-center">
                        <p>@transaction.TransactionDate.Day</p>
                    </div>
                    <div class="col-7">
                        <p>@transaction.Description</p>
                    </div>
                    <div class="col-3">
                        <p>@transaction.Amount</p>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-2">
                    <InputNumber class="form-control" @bind-Value="_model.Day" />
                </div>
                <div class="col-7">
                    <InputText class="form-control" @bind-Value="_model.Description" />
                </div>
                <div class="col-3">
                    <InputNumber class="form-control" @bind-Value="_model.Amount" />
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    <p>Loading...</p>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired] public required string Name { get; set; }
    [Parameter] public List<BudgetLineDto> Transactions { get; set; } = [];
    [Parameter] public bool IsLoaded { get; set; }

    private EditContext? _context;
    private Model _model = new();
    private string _headerClass =>
        Name switch
        {
            "Income" => "bg-success",
            "Expenses" => "bg-danger",
            "Savings" => "bg-info",
            _ => ""
        };
    private string _borderClass =>
        Name switch
        {
            "Income" => "border-success",
            "Expenses" => "border-danger",
            "Savings" => "border-info",
            _ => ""
        };

    protected override void OnInitialized() => _context = new(_model);

    private class Model
    {
        public int? Day { get; set; }
        public string? Description { get; set; }
        public decimal? Amount { get; set; }
    }
}
