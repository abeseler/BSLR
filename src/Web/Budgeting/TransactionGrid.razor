@using Beseler.Shared.Budgeting

<div class="card card">
    <div class="card-header">
        <h3 class="card-title">@Name</h3>
    </div>
    <div class="card-body">
        <table class="card-body table table-responsive table-secondary">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @if (!IsLoaded)
                {
                    <tr>
                        <td colspan="3">Loading...</td>
                    </tr>
                }
                else
                {
                    @foreach (var transaction in Transactions.OrderBy(x => x.TransactionDate))
                    {
                        <tr>
                            <td>@transaction.TransactionDate.Day</td>
                            <td>@transaction.Description</td>
                            <td>@transaction.Amount</td>
                        </tr>
                    }
                    <tr>
                        <td><InputNumber class="border-0 d-inline" @bind-Value="_model.Day" /></td>
                        <td><InputText class="border-0 d-inline" @bind-Value="_model.Description" /></td>
                        <td><InputNumber class="border-0 d-inline" @bind-Value="_model.Amount" /></td>
                    </tr>
                }
            </tbody>            
        </table>
    </div>
</div>

@code {
    [Parameter, EditorRequired] public required string Name { get; set; }
    [Parameter] public List<BudgetLineDto> Transactions { get; set; } = [];
    [Parameter] public bool IsLoaded { get; set; }

    private EditContext? _context;
    private Model _model = new();

    protected override void OnInitialized() => _context = new(_model);

    private class Model
    {
        public int? Day { get; set; }
        public string? Description { get; set; }
        public decimal? Amount { get; set; }
    }
}
